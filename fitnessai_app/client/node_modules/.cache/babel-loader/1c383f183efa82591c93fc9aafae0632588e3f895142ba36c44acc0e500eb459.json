{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': \"*\",\n    'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE, OPTIONS',\n    'Access-Control-Allow-Credentials': 'true'\n  }\n});\nexport const Login = async (userName, password) => {\n  try {\n    const response = await api.post('/login', {\n      \"user_name\": userName,\n      \"password\": password\n    });\n    return response;\n  } catch (response) {\n    return response;\n  }\n};\n_c = Login;\nexport const Register = async (userName, password, age, sex, height, weight, fullName) => {\n  try {\n    const response = await api.post('/register', {\n      \"user_name\": userName,\n      \"password\": password,\n      \"age\": age,\n      \"sex\": sex,\n      \"height\": height,\n      \"weight\": weight,\n      \"fullName\": fullName\n    });\n    return response;\n  } catch (response) {\n    return response;\n  }\n};\n_c2 = Register;\nexport const StartTracking = async userName => {\n  try {\n    const response = await api.post('/start_tracking_training', {\n      \"user_name\": userName\n    });\n    return response;\n  } catch (response) {\n    return response;\n  }\n};\n_c3 = StartTracking;\nexport const TrackingResource = async (userName, trackingNumber, imageHash) => {\n  try {\n    const response = await api.post('/track_training', {\n      \"user_name\": userName,\n      \"training_id\": trackingNumber,\n      \"image_hash\": imageHash,\n      \"timestamp\": Date.now()\n    });\n    return response;\n  } catch (response) {\n    return response;\n  }\n};\n_c4 = TrackingResource;\nexport const DeleteTraining = async (userName, trackingNumber) => {\n  try {\n    const response = await api.post('/delete_training', {\n      \"user_name\": userName,\n      \"training_id\": trackingNumber\n    });\n    return response;\n  } catch (response) {\n    return response;\n  }\n};\n_c5 = DeleteTraining;\nexport const FinishTraining = async (userName, trackingNumber) => {\n  try {\n    const response = await api.post('/finish_training', {\n      \"user_name\": userName,\n      \"training_id\": trackingNumber\n    });\n    return response;\n  } catch (response) {\n    return response;\n  }\n};\n_c6 = FinishTraining;\nexport const GetTrainingResults = async trackingNumber => {\n  try {\n    const response = await api.get('/training_results', {\n      params: {\n        \"training_id\": trackingNumber\n      }\n    });\n    return response;\n  } catch (response) {\n    return response;\n  }\n};\n_c7 = GetTrainingResults;\nexport const AnalyzeTraining = async (userName, trackingNumber) => {\n  try {\n    const response = await api.post('/analyze', {\n      \"user_name\": userName,\n      \"training_id\": trackingNumber\n    });\n    return response;\n  } catch (response) {\n    return response;\n  }\n};\n_c8 = AnalyzeTraining;\nexport const ResultsAvailable = async trackingNumber => {\n  try {\n    const response = await api.get('/results_available', {\n      params: {\n        \"training_id\": trackingNumber\n      }\n    });\n    return response.data;\n  } catch (response) {\n    return response;\n  }\n};\n_c9 = ResultsAvailable;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Register\");\n$RefreshReg$(_c3, \"StartTracking\");\n$RefreshReg$(_c4, \"TrackingResource\");\n$RefreshReg$(_c5, \"DeleteTraining\");\n$RefreshReg$(_c6, \"FinishTraining\");\n$RefreshReg$(_c7, \"GetTrainingResults\");\n$RefreshReg$(_c8, \"AnalyzeTraining\");\n$RefreshReg$(_c9, \"ResultsAvailable\");","map":{"version":3,"names":["axios","api","create","baseURL","headers","Login","userName","password","response","post","_c","Register","age","sex","height","weight","fullName","_c2","StartTracking","_c3","TrackingResource","trackingNumber","imageHash","Date","now","_c4","DeleteTraining","_c5","FinishTraining","_c6","GetTrainingResults","get","params","_c7","AnalyzeTraining","_c8","ResultsAvailable","data","_c9","$RefreshReg$"],"sources":["C:/Users/mosac/Git Repositories/FinalProject_fitnessAI-1/fitnessai_app/client/src/api/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://127.0.0.1:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': \"*\",\r\n    'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE, OPTIONS',\r\n    'Access-Control-Allow-Credentials': 'true',\r\n  },\r\n});\r\n\r\nexport const Login = async (userName: string, password: string) => {\r\n  try {\r\n    const response = await api.post('/login', {\r\n      \"user_name\": userName,\r\n      \"password\": password\r\n    });\r\n\r\n    return response;\r\n  } catch (response) {\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const Register = async (userName: string, password: string, age: Number, sex: string, height: Number, weight: Number, fullName: string) => {\r\n  try {\r\n    const response = await api.post('/register', {\r\n      \"user_name\": userName,\r\n      \"password\": password,\r\n      \"age\": age,\r\n      \"sex\": sex,\r\n      \"height\": height,\r\n      \"weight\": weight,\r\n      \"fullName\": fullName\r\n    });\r\n\r\n    return response;\r\n  } catch (response) {\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const StartTracking = async (userName: string) => {\r\n  try {\r\n    const response = await api.post('/start_tracking_training', {\r\n      \"user_name\": userName,\r\n    });\r\n\r\n    return response;\r\n  } catch (response) {\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const TrackingResource = async (userName: string, trackingNumber: string, imageHash: string) => {\r\n  try {\r\n    const response = await api.post('/track_training', {\r\n      \"user_name\": userName,\r\n      \"training_id\": trackingNumber,\r\n      \"image_hash\": imageHash,\r\n      \"timestamp\": Date.now()\r\n    });\r\n\r\n    return response;\r\n  } catch (response) {\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const DeleteTraining = async (userName: string, trackingNumber: string) => {\r\n  try {\r\n    const response = await api.post('/delete_training', {\r\n      \"user_name\": userName,\r\n      \"training_id\": trackingNumber\r\n    });\r\n\r\n    return response;\r\n  } catch (response) {\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const FinishTraining = async (userName: string, trackingNumber: string) => {\r\n  try {\r\n    const response = await api.post('/finish_training', {\r\n      \"user_name\": userName,\r\n      \"training_id\": trackingNumber\r\n    });\r\n\r\n    return response;\r\n  } catch (response) {\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const GetTrainingResults = async (trackingNumber: number) => {\r\n  try {\r\n    const response = await api.get('/training_results',\r\n      {\r\n        params: {\r\n          \"training_id\": trackingNumber\r\n        }\r\n      });\r\n\r\n    return response;\r\n  } catch (response) {\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const AnalyzeTraining = async (userName: string, trackingNumber: string) => {\r\n  try {\r\n    const response = await api.post('/analyze', {\r\n      \"user_name\": userName,\r\n      \"training_id\": trackingNumber\r\n    });\r\n\r\n    return response;\r\n  } catch (response) {\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const ResultsAvailable = async (trackingNumber: number) => {\r\n  try {\r\n    const response = await api.get('/results_available',\r\n      {\r\n        params: {\r\n          \"training_id\": trackingNumber\r\n        }\r\n      });\r\n\r\n    return response.data;\r\n  } catch (response) {\r\n    return response;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,6BAA6B,EAAE,GAAG;IAClC,8BAA8B,EAAE,iCAAiC;IACjE,kCAAkC,EAAE;EACtC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;EACjE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,QAAQ,EAAE;MACxC,WAAW,EAAEH,QAAQ;MACrB,UAAU,EAAEC;IACd,CAAC,CAAC;IAEF,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOA,QAAQ,EAAE;IACjB,OAAOA,QAAQ;EACjB;AACF,CAAC;AAACE,EAAA,GAXWL,KAAK;AAalB,OAAO,MAAMM,QAAQ,GAAG,MAAAA,CAAOL,QAAgB,EAAEC,QAAgB,EAAEK,GAAW,EAAEC,GAAW,EAAEC,MAAc,EAAEC,MAAc,EAAEC,QAAgB,KAAK;EAChJ,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,WAAW,EAAE;MAC3C,WAAW,EAAEH,QAAQ;MACrB,UAAU,EAAEC,QAAQ;MACpB,KAAK,EAAEK,GAAG;MACV,KAAK,EAAEC,GAAG;MACV,QAAQ,EAAEC,MAAM;MAChB,QAAQ,EAAEC,MAAM;MAChB,UAAU,EAAEC;IACd,CAAC,CAAC;IAEF,OAAOR,QAAQ;EACjB,CAAC,CAAC,OAAOA,QAAQ,EAAE;IACjB,OAAOA,QAAQ;EACjB;AACF,CAAC;AAACS,GAAA,GAhBWN,QAAQ;AAkBrB,OAAO,MAAMO,aAAa,GAAG,MAAOZ,QAAgB,IAAK;EACvD,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,0BAA0B,EAAE;MAC1D,WAAW,EAAEH;IACf,CAAC,CAAC;IAEF,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAOA,QAAQ,EAAE;IACjB,OAAOA,QAAQ;EACjB;AACF,CAAC;AAACW,GAAA,GAVWD,aAAa;AAY1B,OAAO,MAAME,gBAAgB,GAAG,MAAAA,CAAOd,QAAgB,EAAEe,cAAsB,EAAEC,SAAiB,KAAK;EACrG,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,iBAAiB,EAAE;MACjD,WAAW,EAAEH,QAAQ;MACrB,aAAa,EAAEe,cAAc;MAC7B,YAAY,EAAEC,SAAS;MACvB,WAAW,EAAEC,IAAI,CAACC,GAAG,CAAC;IACxB,CAAC,CAAC;IAEF,OAAOhB,QAAQ;EACjB,CAAC,CAAC,OAAOA,QAAQ,EAAE;IACjB,OAAOA,QAAQ;EACjB;AACF,CAAC;AAACiB,GAAA,GAbWL,gBAAgB;AAe7B,OAAO,MAAMM,cAAc,GAAG,MAAAA,CAAOpB,QAAgB,EAAEe,cAAsB,KAAK;EAChF,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,kBAAkB,EAAE;MAClD,WAAW,EAAEH,QAAQ;MACrB,aAAa,EAAEe;IACjB,CAAC,CAAC;IAEF,OAAOb,QAAQ;EACjB,CAAC,CAAC,OAAOA,QAAQ,EAAE;IACjB,OAAOA,QAAQ;EACjB;AACF,CAAC;AAACmB,GAAA,GAXWD,cAAc;AAa3B,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAOtB,QAAgB,EAAEe,cAAsB,KAAK;EAChF,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,kBAAkB,EAAE;MAClD,WAAW,EAAEH,QAAQ;MACrB,aAAa,EAAEe;IACjB,CAAC,CAAC;IAEF,OAAOb,QAAQ;EACjB,CAAC,CAAC,OAAOA,QAAQ,EAAE;IACjB,OAAOA,QAAQ;EACjB;AACF,CAAC;AAACqB,GAAA,GAXWD,cAAc;AAa3B,OAAO,MAAME,kBAAkB,GAAG,MAAOT,cAAsB,IAAK;EAClE,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMP,GAAG,CAAC8B,GAAG,CAAC,mBAAmB,EAChD;MACEC,MAAM,EAAE;QACN,aAAa,EAAEX;MACjB;IACF,CAAC,CAAC;IAEJ,OAAOb,QAAQ;EACjB,CAAC,CAAC,OAAOA,QAAQ,EAAE;IACjB,OAAOA,QAAQ;EACjB;AACF,CAAC;AAACyB,GAAA,GAbWH,kBAAkB;AAe/B,OAAO,MAAMI,eAAe,GAAG,MAAAA,CAAO5B,QAAgB,EAAEe,cAAsB,KAAK;EACjF,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,UAAU,EAAE;MAC1C,WAAW,EAAEH,QAAQ;MACrB,aAAa,EAAEe;IACjB,CAAC,CAAC;IAEF,OAAOb,QAAQ;EACjB,CAAC,CAAC,OAAOA,QAAQ,EAAE;IACjB,OAAOA,QAAQ;EACjB;AACF,CAAC;AAAC2B,GAAA,GAXWD,eAAe;AAa5B,OAAO,MAAME,gBAAgB,GAAG,MAAOf,cAAsB,IAAK;EAChE,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMP,GAAG,CAAC8B,GAAG,CAAC,oBAAoB,EACjD;MACEC,MAAM,EAAE;QACN,aAAa,EAAEX;MACjB;IACF,CAAC,CAAC;IAEJ,OAAOb,QAAQ,CAAC6B,IAAI;EACtB,CAAC,CAAC,OAAO7B,QAAQ,EAAE;IACjB,OAAOA,QAAQ;EACjB;AACF,CAAC;AAAC8B,GAAA,GAbWF,gBAAgB;AAAA,IAAA1B,EAAA,EAAAO,GAAA,EAAAE,GAAA,EAAAM,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAE,GAAA,EAAAG,GAAA;AAAAC,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}